cahier des charges : 

Objectifs et fonctionnalités
Le système doit permettre à l'utilisateur de stocker les informations sur les livres qu'il possède, de suivre les livres qu'il a lus et de suivre les livres qu'il souhaite lire.
Les fonctionnalités principales incluent la recherche de livres, la gestion de prêt et d'emprunt, la création de listes de souhaits, la tenue de notes sur les livres et la génération de rapports sur la collection ainsi que la gestion des séries de livre. 

Architecture et technologies
Le système doit être développé en Python en utilisant un framework web ici présent Flask.
La base de données doit être relationnelle, ici utilisont MySQL.
Le système doit être hébergé en client lourd sur mon PC. 

Interface utilisateur
L'interface utilisateur doit être intuitive et facile à utiliser.
L'utilisateur doit pouvoir naviguer facilement entre les différentes fonctionnalités du système.
La saisie des informations sur les livres doit être facile et rapide, avec la possibilité de saisir les informations manuellement. 

Sécurité
Le système doit être sécurisé contre les attaques web, telles que les injections SQL et les attaques par force brute.
L'utilisateur doit pouvoir créer un compte sécurisé pour accéder au système et gérer sa collection.
Le système doit aussi avoir un compte administrateur pour gérer les collections. 

Maintenance et évolutivité
Le système doit être facilement extensible pour permettre l'ajout de nouvelles fonctionnalités à l'avenir.
Le système doit être facile à maintenir et à déployer, avec des outils de gestion de version tels que Git. 

Tests et validation
Le système doit être testé de manière exhaustive pour garantir sa qualité et son bon fonctionnement.
Les tests doivent inclure des tests unitaires, des tests d'intégration et des tests fonctionnels.
Le système doit être validé par l'utilisateur final avant la mise en production.
Ce cahier des charges peut être adapté en fonction des besoins spécifiques du projet et des contraintes techniques.

